#pragma once

////////////////////////////////////////////////////////////
/// Headers
////////////////////////////////////////////////////////////

#include <SFML/Graphics.hpp>

////////////////////////////////////////////////////////////
/// \brief The Actor class will be a base class for Objects
/// This class only has a position and an id, It is the base class for all Game Objects
////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////
/// \typdef ActorPosition
/// This encapsulates a sf::Vector2f
////////////////////////////////////////////////////////////
typedef sf::Vector2f  ActorPosition;

////////////////////////////////////////////////////////////
/// \typdef ActorId
/// This encapsulates a unsigned int
////////////////////////////////////////////////////////////
typedef unsigned long ActorId;

class Actor
{
public:

	Actor();
	virtual ~Actor(void) = 0;

	inline void setPosition(float positionX, float positionY) { m_position.x = positionX; m_position.y = positionY; }

protected:

	////////////////////////////////////////////////////////////
	/// \brief The \typdef ActorId is a refrence to the Actor
	////////////////////////////////////////////////////////////
	ActorId       m_id;

	////////////////////////////////////////////////////////////
	/// \brief The Position of the Actor
	////////////////////////////////////////////////////////////
	ActorPosition m_position;
};